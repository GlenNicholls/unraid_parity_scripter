name: Check application version
description: |
  Check the application version by extracting the version from
  github.head_ref, e.g. release/v1.2.1, and comparing it to the
  --version output of the app.
inputs:
  app:
    required: true
    description: Python file that accepts --version
  ref_name:
    required: true
    description: Ref to extract the version from, e.g. release/v1.2.1

runs:
  using: composite
  steps:
  - name: Parse expected version
    id: parse-version
    shell: bash -el {0}
    run: |
      ver=$(echo "${{ inputs.ref_name }}" | sed -e 's+release/v++g')
      echo "version=$ver" >> $GITHUB_OUTPUT
  - name: Check version
    shell: bash -el {0}
    run: |
      expect_version=${{ steps.parse-version.outputs.version }}
      got_version=$(python ${{ inputs.app }} --version)
      if [ "$got_version" != "$expect_version" ]; then
        echo "Error: Version mismatch, update the app version. Expected $expect_version but found $got_version."
        exit 1
      fi
